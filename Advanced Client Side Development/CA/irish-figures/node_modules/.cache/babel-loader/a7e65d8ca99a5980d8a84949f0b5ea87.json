{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/CA/irish-figures/src/components/books.js\",\n    _s = $RefreshSig$();\n\n// Component for making and utilising an API call to the Google Books API\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Books(props) {\n  _s();\n\n  // Variables for retrieved data from the API call, setting a condition for what to actually return, and an error message.\n  const [bookInfo, setBookInfo] = useState([]);\n  const [used, setUsed] = useState(false);\n  const [err, setErr] = useState('');\n  useEffect(async function () {\n    try {\n      // API call to Google Books, including API Key generated from Google API, and a query received through props which signifies what person to look up\n      var data = await axios('https://www.googleapis.com/books/v1/volumes', {\n        params: {\n          q: props.query,\n          key: 'AIzaSyD9AyhB8F--bj5fLXUp5fMnGxDy0VXLAt0'\n        }\n      }); // Storing the received data\n\n      setBookInfo(data.data.items); // Marking if the API call was successful, so we know what to return later\n\n      setUsed(true);\n      console.log(data.data.items);\n    } catch (e) {\n      // Setting an error if the API call fails.\n      setErr(\"No Books Available\");\n    }\n  }, []); // If statement to return different results depending on whether or not the API call was successful\n\n  if (used) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Related Reading:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), // Mapping the JSON entries to retrieve data from Arrays\n      bookInfo.map(function (i, index) {\n        // If statement to skip a book and not generate an entry if there is data missing from it\n        if (!i.volumeInfo.imageLinks || !i.volumeInfo.infoLink || !i.volumeInfo.authors || !i.volumeInfo.publishedDate || !i.volumeInfo.description) {\n          console.log(\"Book excluded for missing data\");\n        } else {\n          return (\n            /*#__PURE__*/\n            // Generates an entry for each book received from the API call\n            _jsxDEV(\"a\", {\n              className: \"row mb-1 rounded bg-light text-dark align-items-center book-box\",\n              href: i.volumeInfo.infoLink,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-2\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"border border-5 border-light\",\n                  src: i.volumeInfo.imageLinks.smallThumbnail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-8\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: [i.volumeInfo.title, \" by \", i.volumeInfo.authors[0]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row text-muted\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Published: (\", i.volumeInfo.publishedDate, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: i.volumeInfo.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)\n          );\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    // Error returned if the API call failed.\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Books, \"+WekhSdYw8ETnHJFJCcN4Ne5nN4=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/CA/irish-figures/src/components/books.js"],"names":["useState","useEffect","axios","Books","props","bookInfo","setBookInfo","used","setUsed","err","setErr","data","params","q","query","key","items","console","log","e","map","i","index","volumeInfo","imageLinks","infoLink","authors","publishedDate","description","smallThumbnail","title"],"mappings":";;;AAAA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,kBAAiB;AACvB,QAAI;AACA;AACA,UAAIU,IAAI,GAAG,MAAMT,KAAK,CAAC,6CAAD,EAAgD;AAACU,QAAAA,MAAM,EAAE;AAACC,UAAAA,CAAC,EAAET,KAAK,CAACU,KAAV;AAAiBC,UAAAA,GAAG,EAAE;AAAtB;AAAT,OAAhD,CAAtB,CAFA,CAGA;;AACAT,MAAAA,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUK,KAAX,CAAX,CAJA,CAKA;;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACA,IAAL,CAAUK,KAAtB;AACH,KARD,CAQE,OAAMG,CAAN,EAAS;AACP;AACAT,MAAAA,MAAM,CAAC,oBAAD,CAAN;AACH;AACJ,GAbQ,EAaN,EAbM,CAAT,CANkB,CAqBlB;;AACA,MAAIH,IAAJ,EAAU;AACN,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGY;AACAF,MAAAA,QAAQ,CAACe,GAAT,CAAa,UAASC,CAAT,EAAYC,KAAZ,EAAmB;AAC5B;AACA,YAAI,CAACD,CAAC,CAACE,UAAF,CAAaC,UAAd,IAA4B,CAACH,CAAC,CAACE,UAAF,CAAaE,QAA1C,IAAsD,CAACJ,CAAC,CAACE,UAAF,CAAaG,OAApE,IAA+E,CAACL,CAAC,CAACE,UAAF,CAAaI,aAA7F,IAA8G,CAACN,CAAC,CAACE,UAAF,CAAaK,WAAhI,EAA6I;AACzIX,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,SAFD,MAEO;AACH;AAAA;AACI;AACA;AAAG,cAAA,SAAS,EAAC,iEAAb;AAA+E,cAAA,IAAI,EAAEG,CAAC,CAACE,UAAF,CAAaE,QAAlG;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,8BAAf;AAA8C,kBAAA,GAAG,EAAEJ,CAAC,CAACE,UAAF,CAAaC,UAAb,CAAwBK;AAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACI;AAAA,+BAAKR,CAAC,CAACE,UAAF,CAAaO,KAAlB,UAA6BT,CAAC,CAACE,UAAF,CAAaG,OAAb,CAAqB,CAArB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAA,yCACI;AAAA,+CAAgBL,CAAC,CAACE,UAAF,CAAaI,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAOI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACI;AAAA,8BAAIN,CAAC,CAACE,UAAF,CAAaK;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA,eAAiHN,KAAjH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAmBH;AACJ,OAzBD,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkCH,GAnCD,MAmCO;AACH;AACA,wBACI;AAAA,6BAAK;AAAA,kBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ;;GA/DQN,K;;KAAAA,K;AAiET,eAAeA,KAAf","sourcesContent":["// Component for making and utilising an API call to the Google Books API\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nfunction Books(props) {\n    // Variables for retrieved data from the API call, setting a condition for what to actually return, and an error message.\n    const [bookInfo, setBookInfo] = useState([]);\n    const [used, setUsed] = useState(false);\n    const [err, setErr] = useState('')\n\n    useEffect(async function() {\n        try {\n            // API call to Google Books, including API Key generated from Google API, and a query received through props which signifies what person to look up\n            var data = await axios('https://www.googleapis.com/books/v1/volumes', {params: {q: props.query, key: 'AIzaSyD9AyhB8F--bj5fLXUp5fMnGxDy0VXLAt0'}});\n            // Storing the received data\n            setBookInfo(data.data.items);\n            // Marking if the API call was successful, so we know what to return later\n            setUsed(true);\n            console.log(data.data.items)\n        } catch(e) {\n            // Setting an error if the API call fails.\n            setErr(\"No Books Available\")\n        }\n    }, [])\n\n    // If statement to return different results depending on whether or not the API call was successful\n    if (used) {\n        return (\n            <div>\n                <h3>Related Reading:</h3>\n                    {\n                        // Mapping the JSON entries to retrieve data from Arrays\n                        bookInfo.map(function(i, index) {\n                            // If statement to skip a book and not generate an entry if there is data missing from it\n                            if (!i.volumeInfo.imageLinks || !i.volumeInfo.infoLink || !i.volumeInfo.authors || !i.volumeInfo.publishedDate || !i.volumeInfo.description) {\n                                console.log(\"Book excluded for missing data\")\n                            } else {\n                                return (\n                                    // Generates an entry for each book received from the API call\n                                    <a className=\"row mb-1 rounded bg-light text-dark align-items-center book-box\" href={i.volumeInfo.infoLink} key={index}>\n                                        <div className=\"col-xl-2\">\n                                            <img className=\"border border-5 border-light\" src={i.volumeInfo.imageLinks.smallThumbnail}/>\n                                        </div>\n                                        <div className=\"col-xl-8\">\n                                            <div className=\"row\">\n                                                <h4>{i.volumeInfo.title} by {i.volumeInfo.authors[0]}</h4>\n                                            </div>\n                                            <div className=\"row text-muted\">\n                                                <p>Published: ({i.volumeInfo.publishedDate})</p>\n                                            </div>\n                                            <div className=\"row\">\n                                                <p>{i.volumeInfo.description}</p>\n                                            </div>\n                                        </div>\n                                    </a>\n                                )\n                            }\n                        })\n                    }\n            </div>\n        )\n    } else {\n        // Error returned if the API call failed.\n        return (\n            <div><h3>{err}</h3></div>\n        )\n    }\n}\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}