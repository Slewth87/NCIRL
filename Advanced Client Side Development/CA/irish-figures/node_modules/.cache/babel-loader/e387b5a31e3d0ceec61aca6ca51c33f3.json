{"ast":null,"code":"import _asyncToGenerator from\"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/CA/irish-figures/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/CA/irish-figures/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/CA/irish-figures/node_modules/@babel/runtime/regenerator/index.js\";// Component for making and utilising an API call to the Google Books API\nimport{useState,useEffect}from\"react\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Books(props){// Variables for retrieved data from the API call, setting a condition for what to actually return, and an error message.\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),bookInfo=_useState2[0],setBookInfo=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),used=_useState4[0],setUsed=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),err=_useState6[0],setErr=_useState6[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios('https://www.googleapis.com/books/v1/volumes',{params:{q:props.query,key:'AIzaSyD9AyhB8F--bj5fLXUp5fMnGxDy0VXLAt0'}});case 3:data=_context.sent;// Storing the received data\nsetBookInfo(data.data.items);// Marking if the API call was successful, so we know what to return later\nsetUsed(true);console.log(data.data.items);_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);// Setting an error if the API call fails.\nsetErr(\"No Books Available\");case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);})),[]);// If Statement to return different results depending on whether or not the API call was successful\nif(used){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Related Reading:\"}),// Mapping the JSON entries to retrieve data from Arrays\nbookInfo.map(function(i,index){// If statement to skip a book and not generate an entry if there is data missing from it\nif(!i.volumeInfo.imageLinks||!i.volumeInfo.infoLink||!i.volumeInfo.authors||!i.volumeInfo.publishedDate||!i.volumeInfo.description){console.log(\"Book excluded for missing data\");}else{return/*#__PURE__*/ (// Generates an entry for each book received from the API call\n_jsxs(\"a\",{className:\"row mb-1 rounded bg-light text-dark align-items-center book-box\",href:i.volumeInfo.infoLink,children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-xl-2\",children:/*#__PURE__*/_jsx(\"img\",{className:\"border border-5 border-light\",src:i.volumeInfo.imageLinks.smallThumbnail})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-xl-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[i.volumeInfo.title,\" by \",i.volumeInfo.authors[0]]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row text-muted\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Published: (\",i.volumeInfo.publishedDate,\")\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"p\",{children:i.volumeInfo.description})})]})]},index));}})]});}else{// Error returned if the API call failed.\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{children:err})});}}export default Books;","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/CA/irish-figures/src/components/books.js"],"names":["useState","useEffect","axios","Books","props","bookInfo","setBookInfo","used","setUsed","err","setErr","params","q","query","key","data","items","console","log","map","i","index","volumeInfo","imageLinks","infoLink","authors","publishedDate","description","smallThumbnail","title"],"mappings":"meAAA;AAEA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CAClB;AACA,cAAgCJ,QAAQ,CAAC,EAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAAwBN,QAAQ,CAAC,KAAD,CAAhC,yCAAOO,IAAP,eAAaC,OAAb,eACA,eAAsBR,QAAQ,CAAC,EAAD,CAA9B,yCAAOS,GAAP,eAAYC,MAAZ,eAEAT,SAAS,sEAAC,kLAGeC,CAAAA,KAAK,CAAC,6CAAD,CAAgD,CAACS,MAAM,CAAE,CAACC,CAAC,CAAER,KAAK,CAACS,KAAV,CAAiBC,GAAG,CAAE,yCAAtB,CAAT,CAAhD,CAHpB,QAGEC,IAHF,eAIF;AACAT,WAAW,CAACS,IAAI,CAACA,IAAL,CAAUC,KAAX,CAAX,CACA;AACAR,OAAO,CAAC,IAAD,CAAP,CACAS,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,CAAUC,KAAtB,EARE,+EAUF;AACAN,MAAM,CAAC,oBAAD,CAAN,CAXE,oEAAD,GAaN,EAbM,CAAT,CAeA;AACA,GAAIH,IAAJ,CAAU,CACN,mBACI,oCACI,wCADJ,CAGY;AACAF,QAAQ,CAACc,GAAT,CAAa,SAASC,CAAT,CAAYC,KAAZ,CAAmB,CAC5B;AACA,GAAI,CAACD,CAAC,CAACE,UAAF,CAAaC,UAAd,EAA4B,CAACH,CAAC,CAACE,UAAF,CAAaE,QAA1C,EAAsD,CAACJ,CAAC,CAACE,UAAF,CAAaG,OAApE,EAA+E,CAACL,CAAC,CAACE,UAAF,CAAaI,aAA7F,EAA8G,CAACN,CAAC,CAACE,UAAF,CAAaK,WAAhI,CAA6I,CACzIV,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACH,CAFD,IAEO,CACH,oBACI;AACA,WAAG,SAAS,CAAC,iEAAb,CAA+E,IAAI,CAAEE,CAAC,CAACE,UAAF,CAAaE,QAAlG,wBACI,YAAK,SAAS,CAAC,UAAf,uBACI,YAAK,SAAS,CAAC,8BAAf,CAA8C,GAAG,CAAEJ,CAAC,CAACE,UAAF,CAAaC,UAAb,CAAwBK,cAA3E,EADJ,EADJ,cAII,aAAK,SAAS,CAAC,UAAf,wBACI,YAAK,SAAS,CAAC,KAAf,uBACI,sBAAKR,CAAC,CAACE,UAAF,CAAaO,KAAlB,QAA6BT,CAAC,CAACE,UAAF,CAAaG,OAAb,CAAqB,CAArB,CAA7B,GADJ,EADJ,cAII,YAAK,SAAS,CAAC,gBAAf,uBACI,oCAAgBL,CAAC,CAACE,UAAF,CAAaI,aAA7B,OADJ,EAJJ,cAOI,YAAK,SAAS,CAAC,KAAf,uBACI,mBAAIN,CAAC,CAACE,UAAF,CAAaK,WAAjB,EADJ,EAPJ,GAJJ,GAAiHN,KAAjH,CAFJ,EAmBH,CACJ,CAzBD,CAJZ,GADJ,CAkCH,CAnCD,IAmCO,CACH;AACA,mBACI,kCAAK,oBAAKZ,GAAL,EAAL,EADJ,CAGH,CACJ,CAED,cAAeN,CAAAA,KAAf","sourcesContent":["// Component for making and utilising an API call to the Google Books API\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nfunction Books(props) {\n    // Variables for retrieved data from the API call, setting a condition for what to actually return, and an error message.\n    const [bookInfo, setBookInfo] = useState([]);\n    const [used, setUsed] = useState(false);\n    const [err, setErr] = useState('')\n\n    useEffect(async function() {\n        try {\n            // API call to Google Books, including API Key generated from Google API, and a query received through props which signifies what person to look up\n            var data = await axios('https://www.googleapis.com/books/v1/volumes', {params: {q: props.query, key: 'AIzaSyD9AyhB8F--bj5fLXUp5fMnGxDy0VXLAt0'}});\n            // Storing the received data\n            setBookInfo(data.data.items);\n            // Marking if the API call was successful, so we know what to return later\n            setUsed(true);\n            console.log(data.data.items)\n        } catch(e) {\n            // Setting an error if the API call fails.\n            setErr(\"No Books Available\")\n        }\n    }, [])\n\n    // If Statement to return different results depending on whether or not the API call was successful\n    if (used) {\n        return (\n            <div>\n                <h3>Related Reading:</h3>\n                    {\n                        // Mapping the JSON entries to retrieve data from Arrays\n                        bookInfo.map(function(i, index) {\n                            // If statement to skip a book and not generate an entry if there is data missing from it\n                            if (!i.volumeInfo.imageLinks || !i.volumeInfo.infoLink || !i.volumeInfo.authors || !i.volumeInfo.publishedDate || !i.volumeInfo.description) {\n                                console.log(\"Book excluded for missing data\")\n                            } else {\n                                return (\n                                    // Generates an entry for each book received from the API call\n                                    <a className=\"row mb-1 rounded bg-light text-dark align-items-center book-box\" href={i.volumeInfo.infoLink} key={index}>\n                                        <div className=\"col-xl-2\">\n                                            <img className=\"border border-5 border-light\" src={i.volumeInfo.imageLinks.smallThumbnail}/>\n                                        </div>\n                                        <div className=\"col-xl-8\">\n                                            <div className=\"row\">\n                                                <h4>{i.volumeInfo.title} by {i.volumeInfo.authors[0]}</h4>\n                                            </div>\n                                            <div className=\"row text-muted\">\n                                                <p>Published: ({i.volumeInfo.publishedDate})</p>\n                                            </div>\n                                            <div className=\"row\">\n                                                <p>{i.volumeInfo.description}</p>\n                                            </div>\n                                        </div>\n                                    </a>\n                                )\n                            }\n                        })\n                    }\n            </div>\n        )\n    } else {\n        // Error returned if the API call failed.\n        return (\n            <div><h3>{err}</h3></div>\n        )\n    }\n}\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}