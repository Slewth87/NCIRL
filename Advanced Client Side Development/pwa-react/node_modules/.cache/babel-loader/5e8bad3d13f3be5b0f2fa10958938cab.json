{"ast":null,"code":"import _asyncToGenerator from\"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from\"react\";import axios from\"axios\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Weather(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cityList=_useState2[0],setCityList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),query=_useState4[0],setQuery=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),used=_useState6[0],setUsed=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),detail=_useState8[0],setDetail=_useState8[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:navigator.geolocation.getCurrentPosition(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(pos){var city,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://geocode.xyz/'+pos.coords.latitude+','+pos.coords.longitude,{params:{json:1}},[]);case 2:city=_context.sent;_context.next=5;return axios.get('http://api.openweathermap.org/data/2.5/weather',{params:{mode:'json',APPID:'7e62df7908e6b6b3c2c08498d7bc8109',q:city.data.city}});case 5:res=_context.sent;setCityList(res.data);setDetail(res.data.weather);setUsed(true);case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());case 1:case\"end\":return _context2.stop();}}},_callee2);})),[]);function handleSearchQuery(e){e.preventDefault();setQuery(e.target.value);}function searchCityList(_x2){return _searchCityList.apply(this,arguments);}function _searchCityList(){_searchCityList=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();_context3.next=3;return axios.get('http://api.openweathermap.org/data/2.5/weather',{params:{mode:'json',APPID:'7e62df7908e6b6b3c2c08498d7bc8109',q:query}});case 3:res=_context3.sent;setCityList(res.data);setDetail(res.data.weather);setUsed(true);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return _searchCityList.apply(this,arguments);}if(used){console.log(\"loops\");return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"The current weather in \",cityList.name,\" is:\"]}),/*#__PURE__*/_jsxs(\"ul\",{children:[detail.map(function(i,index){return/*#__PURE__*/_jsxs(\"li\",{children:[\"There's \",i.description,\".\"]},index);}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Temperature: \",Math.round(cityList.main.temp-273.15),\"\\xB0 Celsius\",/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsxs(\"li\",{children:[\"Feels like \",Math.round(cityList.main.feels_like-273.15),\"\\xB0 Celsius\"]})})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Humidity: \",cityList.main.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Wind speed: \",cityList.wind.speed,\"kph\"]})]})]});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:query,onChange:handleSearchQuery}),/*#__PURE__*/_jsx(\"button\",{onClick:searchCityList,children:\"Search\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Or, if your location access is working, just wait.\"})]});}}export default Weather;","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/weather.js"],"names":["useState","useEffect","axios","Weather","cityList","setCityList","query","setQuery","used","setUsed","detail","setDetail","navigator","geolocation","getCurrentPosition","pos","get","coords","latitude","longitude","params","json","city","mode","APPID","q","data","res","weather","handleSearchQuery","e","preventDefault","target","value","searchCityList","console","log","name","map","i","index","description","Math","round","main","temp","feels_like","humidity","wind","speed"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Weather() {\n    const [cityList, setCityList] = useState([]);\n    const [query, setQuery] = useState('');\n    const [used, setUsed] = useState(false);\n    const [detail, setDetail] = useState([]);\n\n    useEffect(async function() {\n        navigator.geolocation.getCurrentPosition(async function(pos) {\n            \n            var city = await axios.get('https://geocode.xyz/'+pos.coords.latitude+','+pos.coords.longitude, {params: {json: 1}},[])\n            var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {params: { mode: 'json', APPID: '7e62df7908e6b6b3c2c08498d7bc8109', q: city.data.city}});\n            setCityList(res.data);\n            setDetail(res.data.weather);\n            setUsed(true);\n        })\n    },[])\n\n    function handleSearchQuery(e) {\n        e.preventDefault();\n        setQuery(e.target.value);\n    }\n\n    async function searchCityList(e) {\n        e.preventDefault();\n        var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {params: { mode: 'json', APPID: '7e62df7908e6b6b3c2c08498d7bc8109', q: query}});\n        setCityList(res.data)\n        setDetail(res.data.weather)\n        setUsed(true);\n    }\n\n    if (used) {\n        console.log(\"loops\")\n        return (\n            <div>\n                <h2>The current weather in {cityList.name} is:</h2>\n                <ul>\n                    {\n                        detail.map(function(i, index) {\n                            return (\n                                <li key={index}>\n                                    There's {i.description}.\n                                </li>\n                            )\n                        })\n                    }\n                    <li>\n                        Temperature: {Math.round(cityList.main.temp-273.15)}° Celsius\n                        <ul>\n                            <li>\n                                Feels like {Math.round(cityList.main.feels_like-273.15)}° Celsius\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        Humidity: {cityList.main.humidity}%\n                    </li>\n                    <li>\n                        Wind speed: {cityList.wind.speed}kph\n                    </li>\n                </ul>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <input value={query} onChange={handleSearchQuery}/>\n                <button onClick={searchCityList}>Search</button>\n                <p>Or, if your location access is working, just wait.</p>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}