{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/weather.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [long, setLong] = useState(0);\n  const [lat, setLat] = useState(0);\n  const [err, setErr] = useState(false);\n  const [cityList, setCityList] = useState([]);\n  const [query, setQuery] = useState('');\n  const [used, setUsed] = useState(false);\n  const [detail, setDetail] = useState([]);\n  useEffect(async function () {\n    if (!(\"geolocation\" in navigator)) {\n      setErr(true);\n    }\n\n    navigator.geolocation.getCurrentPosition(async function (pos) {\n      setLat(pos.coords.latitude);\n      setLong(pos.coords.longitude);\n\n      try {\n        var data = await axios('https://geocode.xyz/' + pos.coords.latitude + ',' + pos.coords.longitude, {\n          params: {\n            json: 1\n          }\n        });\n      } catch (e) {\n        setErr(true);\n      }\n\n      setQuery(data.data.city);\n    }, function (err) {\n      setErr(true);\n    });\n\n    if (!err) {\n      searchCityList();\n    }\n  });\n\n  function handleSearchQuery(e) {\n    e.preventDefault();\n    setQuery(e.target.value);\n  }\n\n  async function searchCityList(e) {\n    e.preventDefault();\n    var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {\n      params: {\n        mode: 'json',\n        APPID: '7e62df7908e6b6b3c2c08498d7bc8109',\n        q: query\n      }\n    });\n    setCityList(res.data);\n    setDetail(res.data.weather);\n    setUsed(true);\n  }\n\n  if (used) {\n    console.log(cityList);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"The current weather in \", cityList.name, \" is:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [detail.map(function (i, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"There's \", i.description, \".\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(cityList.main.temp - 273.15), \"\\xB0 Celsius\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Feels like \", Math.round(cityList.main.feels_like - 273.15), \"\\xB0 Celsius\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", cityList.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind speed: \", cityList.wind.speed, \"kph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: query,\n        onChange: handleSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchCityList,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(Weather, \"PvXm+arR87HYQZRMZnnHGMo9DH0=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/weather.js"],"names":["useState","useEffect","axios","Weather","long","setLong","lat","setLat","err","setErr","cityList","setCityList","query","setQuery","used","setUsed","detail","setDetail","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","data","params","json","e","city","searchCityList","handleSearchQuery","preventDefault","target","value","res","get","mode","APPID","q","weather","console","log","name","map","i","index","description","Math","round","main","temp","feels_like","humidity","wind","speed"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Weather() {\n    const [long, setLong] = useState(0);\n    const [lat, setLat] = useState(0);\n    const [err, setErr] = useState(false)\n    const [cityList, setCityList] = useState([]);\n    const [query, setQuery] = useState('');\n    const [used, setUsed] = useState(false);\n    const [detail, setDetail] = useState([]);\n\n    useEffect(async function() {\n        if(!(\"geolocation\" in navigator)) {\n            setErr(true)\n        }\n        navigator.geolocation.getCurrentPosition(async function(pos) {\n            setLat(pos.coords.latitude);\n            setLong(pos.coords.longitude);\n            \n            try {\n                var data = await axios('https://geocode.xyz/'+pos.coords.latitude+','+pos.coords.longitude, {params: {json: 1}})\n            } catch(e) {\n                setErr(true)\n            }\n            setQuery(data.data.city)\n        }, function(err) {\n            setErr(true)\n        })\n        if (!err) {\n            searchCityList();\n        }\n    })\n\n    function handleSearchQuery(e) {\n        e.preventDefault();\n        setQuery(e.target.value);\n    }\n\n    async function searchCityList(e) {\n        e.preventDefault();\n        var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {params: { mode: 'json', APPID: '7e62df7908e6b6b3c2c08498d7bc8109', q: query}});\n        setCityList(res.data)\n        setDetail(res.data.weather)\n        setUsed(true);\n    }\n\n        if (used) {\n            console.log(cityList)\n            return (\n                <div>\n                    <h2>The current weather in {cityList.name} is:</h2>\n                    <ul>\n                        {\n                            detail.map(function(i, index) {\n                                return (\n                                    <li key={index}>\n                                        There's {i.description}.\n                                    </li>\n                                )\n                            })\n                        }\n                        <li>\n                            Temperature: {Math.round(cityList.main.temp-273.15)}° Celsius\n                            <ul>\n                                <li>\n                                    Feels like {Math.round(cityList.main.feels_like-273.15)}° Celsius\n                                </li>\n                            </ul>\n                        </li>\n                        <li>\n                            Humidity: {cityList.main.humidity}%\n                        </li>\n                        <li>\n                            Wind speed: {cityList.wind.speed}kph\n                        </li>\n                    </ul>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <input value={query} onChange={handleSearchQuery}/>\n                    <button onClick={searchCityList}>Search</button>\n                </div>\n            )\n        }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}