{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/weather.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [cityList, setCityList] = useState([]);\n  const [query, setQuery] = useState('');\n  const [used, setUsed] = useState(false);\n  const [detail, setDetail] = useState([]);\n  const [loopstop, setLoopstop] = useState(false);\n  useEffect(async function () {\n    navigator.geolocation.getCurrentPosition(async function (pos) {\n      if (!loopstop) {\n        var city = await axios.get('https://geocode.xyz/' + pos.coords.latitude + ',' + pos.coords.longitude, {\n          params: {\n            json: 1\n          }\n        }, []);\n        var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {\n          params: {\n            mode: 'json',\n            APPID: '7e62df7908e6b6b3c2c08498d7bc8109',\n            q: city.data.city\n          }\n        });\n        setCityList(res.data);\n        setDetail(res.data.weather);\n        setUsed(true);\n        setLoopstop(true);\n      }\n    });\n  }, []);\n\n  function handleSearchQuery(e) {\n    e.preventDefault();\n    setQuery(e.target.value);\n  }\n\n  async function searchCityList(e) {\n    e.preventDefault();\n    var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {\n      params: {\n        mode: 'json',\n        APPID: '7e62df7908e6b6b3c2c08498d7bc8109',\n        q: query\n      }\n    });\n    setCityList(res.data);\n    setDetail(res.data.weather);\n    setUsed(true);\n  }\n\n  if (used) {\n    console.log(\"loopstop: \" + loopstop);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"The current weather in \", cityList.name, \" is:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [detail.map(function (i, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"There's \", i.description, \".\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(cityList.main.temp - 273.15), \"\\xB0 Celsius\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Feels like \", Math.round(cityList.main.feels_like - 273.15), \"\\xB0 Celsius\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", cityList.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind speed: \", cityList.wind.speed, \"kph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: query,\n        onChange: handleSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchCityList,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Or, if your location access is on, just wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Weather, \"djJbdXYEZMD4qeDyvfgJYimY2YM=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/weather.js"],"names":["useState","useEffect","axios","Weather","cityList","setCityList","query","setQuery","used","setUsed","detail","setDetail","loopstop","setLoopstop","navigator","geolocation","getCurrentPosition","pos","city","get","coords","latitude","longitude","params","json","res","mode","APPID","q","data","weather","handleSearchQuery","e","preventDefault","target","value","searchCityList","console","log","name","map","i","index","description","Math","round","main","temp","feels_like","humidity","wind","speed"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Weather() {\n    const [cityList, setCityList] = useState([]);\n    const [query, setQuery] = useState('');\n    const [used, setUsed] = useState(false);\n    const [detail, setDetail] = useState([]);\n    const [loopstop, setLoopstop] = useState(false);\n\n    useEffect(async function() {\n        navigator.geolocation.getCurrentPosition(async function(pos) {\n            \n            if (!loopstop) {\n                var city = await axios.get('https://geocode.xyz/'+pos.coords.latitude+','+pos.coords.longitude, {params: {json: 1}},[])\n                var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {params: { mode: 'json', APPID: '7e62df7908e6b6b3c2c08498d7bc8109', q: city.data.city}});\n                setCityList(res.data);\n                setDetail(res.data.weather);\n                setUsed(true);\n                setLoopstop(true);\n            }\n        })\n    },[])\n\n    function handleSearchQuery(e) {\n        e.preventDefault();\n        setQuery(e.target.value);\n    }\n\n    async function searchCityList(e) {\n        e.preventDefault();\n        var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {params: { mode: 'json', APPID: '7e62df7908e6b6b3c2c08498d7bc8109', q: query}});\n        setCityList(res.data)\n        setDetail(res.data.weather)\n        setUsed(true);\n    }\n\n    if (used) {\n        console.log(\"loopstop: \" + loopstop)\n        return (\n            <div>\n                <h2>The current weather in {cityList.name} is:</h2>\n                <ul>\n                    {\n                        detail.map(function(i, index) {\n                            return (\n                                <li key={index}>\n                                    There's {i.description}.\n                                </li>\n                            )\n                        })\n                    }\n                    <li>\n                        Temperature: {Math.round(cityList.main.temp-273.15)}° Celsius\n                        <ul>\n                            <li>\n                                Feels like {Math.round(cityList.main.feels_like-273.15)}° Celsius\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        Humidity: {cityList.main.humidity}%\n                    </li>\n                    <li>\n                        Wind speed: {cityList.wind.speed}kph\n                    </li>\n                </ul>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <input value={query} onChange={handleSearchQuery}/>\n                <button onClick={searchCityList}>Search</button>\n                <p>Or, if your location access is on, just wait.</p>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}