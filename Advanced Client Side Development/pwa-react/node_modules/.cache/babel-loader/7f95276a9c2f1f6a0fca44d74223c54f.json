{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/GeoCoords.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GeoCoords() {\n  _s();\n\n  const [long, setLong] = useState(0);\n  const [lat, setLat] = useState(0);\n  const [err, setErr] = useState('');\n  useEffect(async function () {\n    if (!(\"geolocation\" in navigator)) {\n      setErr('Geolocation not available');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), lat, \",\", long]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GeoCoords, \"hdRl5Df1WyxlYInBQQgpdsB8xuc=\");\n\n_c = GeoCoords;\nexport default GeoCoords;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoCoords\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/GeoCoords.js"],"names":["useState","useEffect","axios","GeoCoords","long","setLong","lat","setLat","err","setErr","navigator"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,kBAAiB;AACvB,QAAG,EAAE,iBAAiBS,SAAnB,CAAH,EAAkC;AAC9BD,MAAAA,MAAM,CAAC,2BAAD,CAAN;AACH;AACJ,GAJQ,CAAT;AAMA,sBACI;AAAA,4BACI;AAAA,gBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,GAFL,OAEWF,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjBQD,S;;KAAAA,S;AAmBT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nfunction GeoCoords() {\n    const [long, setLong] = useState(0);\n    const [lat, setLat] = useState(0);\n    const [err, setErr] = useState('')\n\n    useEffect(async function() {\n        if(!(\"geolocation\" in navigator)) {\n            setErr('Geolocation not available')\n        }\n    })\n\n    return (\n        <div>\n            <div>{err}</div>\n            {lat},{long}\n        </div>\n    )\n}\n\nexport default GeoCoords;"]},"metadata":{},"sourceType":"module"}