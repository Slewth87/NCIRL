{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/GeoCoords.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GeoCoords() {\n  _s();\n\n  const [long, setLong] = useState(0);\n  const [lat, setLat] = useState(0);\n  const [err, setErr] = useState('');\n  useEffect(async function () {\n    if (!(\"geolocation\" in navigator)) {\n      setErr('Geolocation not available');\n    }\n\n    navigator.geolocation.getCurrentPosition(async function (pos) {\n      setLat(pos.coords.latitude);\n      setLong(pos.coords.longitude);\n\n      try {\n        var data = await axios('https://geocode.xyz/' + pos.coords.latitude + ',' + pos.coords.longitude + '?json=1');\n      } catch (e) {\n        setErr(\"Could not retrieve location, try again later.\");\n      }\n\n      console.log(data);\n    }, function (err) {\n      setErr(\"User denied Geolocation access\");\n    });\n  });\n\n  if (err) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [lat, \",\", long]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(GeoCoords, \"hdRl5Df1WyxlYInBQQgpdsB8xuc=\");\n\n_c = GeoCoords;\nexport default GeoCoords;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoCoords\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/pwa-react/src/components/GeoCoords.js"],"names":["useState","useEffect","axios","GeoCoords","long","setLong","lat","setLat","err","setErr","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","data","e","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,kBAAiB;AACvB,QAAG,EAAE,iBAAiBS,SAAnB,CAAH,EAAkC;AAC9BD,MAAAA,MAAM,CAAC,2BAAD,CAAN;AACH;;AACDC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,gBAAeC,GAAf,EAAoB;AACzDN,MAAAA,MAAM,CAACM,GAAG,CAACC,MAAJ,CAAWC,QAAZ,CAAN;AACAV,MAAAA,OAAO,CAACQ,GAAG,CAACC,MAAJ,CAAWE,SAAZ,CAAP;;AAEA,UAAI;AACA,YAAIC,IAAI,GAAG,MAAMf,KAAK,CAAC,yBAAuBW,GAAG,CAACC,MAAJ,CAAWC,QAAlC,GAA2C,GAA3C,GAA+CF,GAAG,CAACC,MAAJ,CAAWE,SAA1D,GAAoE,SAArE,CAAtB;AACH,OAFD,CAEE,OAAME,CAAN,EAAS;AACPT,QAAAA,MAAM,CAAC,+CAAD,CAAN;AACH;;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAVD,EAUG,UAAST,GAAT,EAAc;AACbC,MAAAA,MAAM,CAAC,gCAAD,CAAN;AACH,KAZD;AAaH,GAjBQ,CAAT;;AAkBA,MAAID,GAAJ,EAAS;AACL,wBACI;AAAA,6BACI;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMO;AACH,wBACI;AAAA,iBACKF,GADL,OACWF,IADX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ;;GApCQD,S;;KAAAA,S;AAsCT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nfunction GeoCoords() {\n    const [long, setLong] = useState(0);\n    const [lat, setLat] = useState(0);\n    const [err, setErr] = useState('')\n\n    useEffect(async function() {\n        if(!(\"geolocation\" in navigator)) {\n            setErr('Geolocation not available')\n        }\n        navigator.geolocation.getCurrentPosition(async function(pos) {\n            setLat(pos.coords.latitude);\n            setLong(pos.coords.longitude);\n            \n            try {\n                var data = await axios('https://geocode.xyz/'+pos.coords.latitude+','+pos.coords.longitude+'?json=1')\n            } catch(e) {\n                setErr(\"Could not retrieve location, try again later.\")\n            }\n            console.log(data)\n        }, function(err) {\n            setErr(\"User denied Geolocation access\")\n        })\n    })\n    if (err) {\n        return (\n            <div>\n                <div>{err}</div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                {lat},{long}\n            </div>\n        )\n    }\n}\n\nexport default GeoCoords;"]},"metadata":{},"sourceType":"module"}