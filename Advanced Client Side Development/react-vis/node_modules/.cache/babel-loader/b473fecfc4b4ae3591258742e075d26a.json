{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/react-vis/src/components/PieVis.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Highcharts from 'highcharts/highcharts';\nimport PieChart from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PieVis() {\n  _s();\n\n  const [earnings, setEarnings] = useState({});\n  const config = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie'\n    },\n    title: {\n      text: 'Earnings by City'\n    },\n    tooltip: {\n      pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n    },\n    accessibility: {\n      point: {\n        valueSuffix: '%'\n      }\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: true,\n          format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n        }\n      }\n    },\n    series: [{\n      name: 'Brands',\n      colorByPoint: true,\n      data: earnings\n    }]\n  };\n  useEffect(async function () {\n    var data = await axios.get(\"http://localhost:8080/earnings\");\n    var formattedData = data.data.map(function (earnings) {\n      return {\n        name: earnings.country,\n        y: earnings.earnings\n      };\n    });\n    console.log(formattedData);\n    setEarnings(formattedData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      highcharts: Highcharts,\n      options: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PieVis, \"/uac2aadjKkZUANsTaY46DG2OAk=\");\n\n_c = PieVis;\nexport default PieVis;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieVis\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/react-vis/src/components/PieVis.js"],"names":["useState","useEffect","axios","Highcharts","PieChart","PieVis","earnings","setEarnings","config","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","title","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","series","name","colorByPoint","data","get","formattedData","map","country","y","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMQ,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,mBAAmB,EAAE,IADlB;AAEHC,MAAAA,eAAe,EAAE,IAFd;AAGHC,MAAAA,UAAU,EAAE,KAHT;AAIHC,MAAAA,IAAI,EAAE;AAJH,KADI;AAOXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE;AADH,KAPI;AAUXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR,KAVE;AAaXC,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE;AACHC,QAAAA,WAAW,EAAE;AADV;AADI,KAbJ;AAkBXC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,gBAAgB,EAAE,IADjB;AAEDC,QAAAA,MAAM,EAAE,SAFP;AAGDC,QAAAA,UAAU,EAAE;AACRC,UAAAA,OAAO,EAAE,IADD;AAERC,UAAAA,MAAM,EAAE;AAFA;AAHX;AADI,KAlBF;AA4BXC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,YAAY,EAAE,IAFT;AAGLC,MAAAA,IAAI,EAAEzB;AAHD,KAAD;AA5BG,GAAf;AAoCAL,EAAAA,SAAS,CAAC,kBAAkB;AACxB,QAAI8B,IAAI,GAAG,MAAM7B,KAAK,CAAC8B,GAAN,CAAU,gCAAV,CAAjB;AACA,QAAIC,aAAa,GAAGF,IAAI,CAACA,IAAL,CAAUG,GAAV,CAAc,UAAS5B,QAAT,EAAmB;AACjD,aAAO;AACHuB,QAAAA,IAAI,EAAEvB,QAAQ,CAAC6B,OADZ;AAEHC,QAAAA,CAAC,EAAE9B,QAAQ,CAACA;AAFT,OAAP;AAIC,KALe,CAApB;AAOA+B,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACA1B,IAAAA,WAAW,CAAC0B,aAAD,CAAX;AACH,GAXQ,EAWN,EAXM,CAAT;AAcA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAE9B,UAAtB;AAAkC,MAAA,OAAO,EAAEK;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1DQH,M;;KAAAA,M;AA4DT,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Highcharts from 'highcharts/highcharts'\nimport PieChart from \"highcharts-react-official\"\n\nfunction PieVis() {\n    const [earnings, setEarnings] = useState({});\n\n    const config = {\n        chart: {\n            plotBackgroundColor: null,\n            plotBorderWidth: null,\n            plotShadow: false,\n            type: 'pie'\n        },\n        title: {\n            text: 'Earnings by City'\n        },\n        tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n        },\n        accessibility: {\n            point: {\n                valueSuffix: '%'\n            }\n        },\n        plotOptions: {\n            pie: {\n                allowPointSelect: true,\n                cursor: 'pointer',\n                dataLabels: {\n                    enabled: true,\n                    format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n                }\n            }\n        },\n        series: [{\n            name: 'Brands',\n            colorByPoint: true,\n            data: earnings\n        }]\n    }\n\n\n    useEffect(async function () {\n        var data = await axios.get(\"http://localhost:8080/earnings\")\n        var formattedData = data.data.map(function(earnings) {\n            return {\n                name: earnings.country,\n                y: earnings.earnings\n                }\n            }\n        )\n        console.log(formattedData)\n        setEarnings(formattedData)\n    }, [])\n\n\n    return (\n        <div>\n            <PieChart highcharts={Highcharts} options={config}/>\n        </div>\n    )\n}\n\nexport default PieVis;"]},"metadata":{},"sourceType":"module"}