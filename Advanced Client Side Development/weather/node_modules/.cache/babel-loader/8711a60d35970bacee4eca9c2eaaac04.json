{"ast":null,"code":"var _jsxFileName = \"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/weather/src/components/weather.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherDetail from \"./WeatherDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [cityList, setCityList] = useState([]);\n  const [query, setQuery] = useState('');\n  const [used, setUsed] = useState(false);\n  console.log(used);\n\n  function handleSearchQuery(e) {\n    e.preventDefault();\n    setQuery(e.target.value);\n  }\n\n  async function searchCityList(e) {\n    e.preventDefault();\n    setUsed(true);\n    var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {\n      params: {\n        mode: 'json',\n        APPID: '7e62df7908e6b6b3c2c08498d7bc8109',\n        q: query\n      }\n    });\n    console.log(res.data);\n    setCityList(res.data);\n  }\n\n  if (used === true) {\n    console.log(\"state\" + used);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: query,\n        onChange: handleSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchCityList,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: query,\n        onChange: handleSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchCityList,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"The current weather in \", query, \" is:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Weather, \"5yCRQmBvnlkatqIFgvUE7TGU+o8=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/rduffy/Code/NCIRL/Advanced Client Side Development/weather/src/components/weather.js"],"names":["useState","axios","WeatherDetail","Weather","cityList","setCityList","query","setQuery","used","setUsed","console","log","handleSearchQuery","e","preventDefault","target","value","searchCityList","res","get","params","mode","APPID","q","data"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACJU,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACI,WAASI,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,QAAQ,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACH;;AAED,iBAAeC,cAAf,CAA8BJ,CAA9B,EAAiC;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,QAAIS,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,gDAAV,EAA4D;AAACC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE,kCAAvB;AAA2DC,QAAAA,CAAC,EAAEjB;AAA9D;AAAT,KAA5D,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACM,IAAhB;AACAnB,IAAAA,WAAW,CAACa,GAAG,CAACM,IAAL,CAAX;AACH;;AAED,MAAIhB,IAAI,KAAK,IAAb,EAAmB;AACfE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAQH,IAApB;AACA,wBACI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEF,KAAd;AAAqB,QAAA,QAAQ,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEK,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GARD,MAQO;AACH,wBACI;AAAA,8BACI;AAAO,QAAA,KAAK,EAAEX,KAAd;AAAqB,QAAA,QAAQ,EAAEM;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEK,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,8CAA4BX,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AACJ;;GAnCQH,O;;KAAAA,O;AAqCT,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherDetail from \"./WeatherDetail\";\n\nfunction Weather() {\n    const [cityList, setCityList] = useState([]);\n    const [query, setQuery] = useState('');\n    const [used, setUsed] = useState(false);\nconsole.log(used);\n    function handleSearchQuery(e) {\n        e.preventDefault();\n        setQuery(e.target.value);\n    }\n\n    async function searchCityList(e) {\n        e.preventDefault();\n        setUsed(true);\n        var res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {params: { mode: 'json', APPID: '7e62df7908e6b6b3c2c08498d7bc8109', q: query}});\n        console.log(res.data);\n        setCityList(res.data);\n    }\n\n    if (used === true) {\n        console.log(\"state\"+used)\n        return (\n            <div>\n                <input value={query} onChange={handleSearchQuery}/>\n                <button onClick={searchCityList}>Search</button>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <input value={query} onChange={handleSearchQuery}/>\n                <button onClick={searchCityList}>Search</button>\n                <h2>The current weather in {query} is:</h2>\n            </div>\n        )\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}