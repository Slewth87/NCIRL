[{"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/index.js":"1","/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/App.js":"2","/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/reportWebVitals.js":"3","/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/components/Todolist.js":"4","/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/components/Todo.js":"5"},{"size":500,"mtime":1645185602659,"results":"6","hashOfConfig":"7"},{"size":193,"mtime":1645186272706,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1645185602660,"results":"9","hashOfConfig":"7"},{"size":3228,"mtime":1646856021306,"results":"10","hashOfConfig":"7"},{"size":354,"mtime":1645304484105,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"5o9p",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"15"},"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/index.js",[],[],["31","32"],"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/App.js",["33"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Todolist from \"./components/Todolist\";\n\nfunction App() {\n  return (\n    <div>\n      <Todolist />\n    </div>\n  );\n}\n\nexport default App;","/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/reportWebVitals.js",[],[],"/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/components/Todolist.js",["34"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport Todo from \"./Todo\";\n\nfunction Todolist() {\n    const [todos, setTodos] = useState([]);\n    const [text, setText] = useState(\"\");\n    const [id, setId] = useState(0);\n    const [updateText, setUpdateText] = useState(\"\");\n\n    async function getTodos() {\n        var data = await axios.get(\"http://localhost:3001\")\n        console.log(data)\n    }\n    function inputHandler(e) {\n        e.preventDefault();\n        setText(e.target.value);\n    }\n\n    function submissionHandler(e) {\n        e.preventDefault();\n        setTodos(\n            function(todosArr) {\n                setId(id+1)\n                return [ ...todosArr, {text: text, id:id, isEdit:false}]\n            }\n        )\n    }\n\n    function handleUpdateText(e) {\n        e.preventDefault();\n        setUpdateText(e.target.value);\n    }\n\n    function delHandler(e, id) {\n        var todosArr = [...todos]\n        var index = todos.indexOf(todos.find(\n            function(todo) {\n                return todo.id === id\n            }\n        ))\n        todosArr.splice(index, 1)\n        setTodos(todosArr)\n    }\n\n    function editHandler(e, id) {\n        e.preventDefault();\n        var todosArr = [...todos]\n        var index = todosArr.indexOf(todosArr.find(function(todo) {\n            return todo.id === id\n        }))\n        todosArr[index].isEdit = true;\n        setUpdateText(todosArr[index].text)\n        setTodos(todosArr);\n    }\n\n    function handleUpdate(e, id) {\n        e.preventDefault();\n        var todosArr = [...todos]\n        var index = todosArr.indexOf(todosArr.find(function(todo){\n            return todo.id === id\n        }))\n        todosArr[index].isEdit = false\n        setUpdateText(\"\");\n        todosArr[index].text = updateText;\n        setTodos(todos);\n    }\n\n    return (\n        <div>\n            <input value={text} onChange={inputHandler}/>\n            <button onClick={submissionHandler}>Add todo</button>\n            <ul>\n                {todos.map(function(i, index) {\n                    if(i.isEdit) {\n                        return (\n                            <li key={index}>\n                                <Todo todo={todos[index]} handleUpdateText={handleUpdateText} updateText={updateText}/>\n                                <button onClick={function(e) {\n                                    handleUpdate(e, i.id)\n                                }}>Change</button>\n                            </li>\n                        )\n                    } else {\n                        return (\n                            <li key={index}>\n                                <Todo todo={todos[index]} editHandler={editHandler} updateText={updateText}/>\n                                <button onClick={function (e) {\n                                    delHandler(e, i.id)\n                                }}>Delete</button>\n                                <button onClick={function(e) {\n                                    editHandler(e, i.id)\n                                }}>Update</button>\n                            </li>\n                        )\n                    }\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default Todolist;","/Users/rduffy/Code/NCIRL/Advanced Client Side Development/React/practice/src/components/Todo.js",["35"],[],"import { useState } from \"react\";\n\nfunction Todo(props) {\n    if(props.todo.isEdit){\n        return (\n            <span><input value={props.updateText} onChange={props.handleUpdateText}></input></span>\n        )\n    } else {\n        return (\n            <span>\n                {props.todo.text}\n            </span>\n        )\n    }\n}\n\nexport default Todo;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":11,"column":20,"nodeType":"42","messageId":"43","endLine":11,"endColumn":28},{"ruleId":"40","severity":1,"message":"45","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":18},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'getTodos' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]